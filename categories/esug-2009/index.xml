<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esug 2009 on 10 Pines Blog</title>
    <link>http://blog.10pines.com/categories/esug-2009/</link>
    <description>Recent content in Esug 2009 on 10 Pines Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Sep 2009 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog.10pines.com/categories/esug-2009/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to be rich with smalltalk - Intregrating RIA &amp; Smalltalk</title>
      <link>http://blog.10pines.com/2009/09/24/how-to-be-rich-with-smalltalk-intregrating-ria-and-smalltalk/</link>
      <pubDate>Thu, 24 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.10pines.com/2009/09/24/how-to-be-rich-with-smalltalk-intregrating-ria-and-smalltalk/</guid>
      <description>&lt;p&gt;Nowadays, more applications are RIA oriented solutions. RIA (Rich Internet Applications) is a new kind of application with more advantages than traditional applications. It emerges as a combination of features offered by web applications and desktop applications. Even multimedia capabilities are covered because these environments have internal players.&lt;/p&gt;

&lt;p&gt;RIA is a new concept that is growing with the advent of Adobe&amp;rsquo;s product Flex, Flash, OpenLaszlo and the Ajax platform.&lt;/p&gt;

&lt;p&gt;The goal of this presentation is to show by example the way to integrate a pure Smalltalk back-end with a flexible front-end made it with Flex, using web services. In this way we:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Obtain Smalltalk capabilities to model my business domain&lt;/li&gt;
&lt;li&gt;Give my application a rich and appealing interface in short time, with many problems already solved.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this integration we look for best domain modeling techniques with Smalltalk, as reflective capabilities, dynamic typing and, in the other hand, to get the best communicative interface as RIA.&lt;/p&gt;

&lt;p&gt;Finally, integrating in this manner is a perfect complement when developing applications not only web but desktop too, because you give the final product a unique dynamism thank to Smalltalk and a rich, friendly and interactive interface as Flex (o more generally RIA).&lt;/p&gt;

&lt;p&gt;{% youtube bwk5eLXpoLA %}&lt;/p&gt;

&lt;p&gt;This presentation was presented at &lt;a href=&#34;http://www.esug.org/Conferences/2009&#34;&gt;ESUG 2009&lt;/a&gt;. You can see the handouts here:&lt;/p&gt;

&lt;p&gt;{% slideshare 2065194 %}&lt;/p&gt;

&lt;p&gt;View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/silvajorge&#34;&gt;10Pines&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mutation testing</title>
      <link>http://blog.10pines.com/2009/09/18/mutation-testing/</link>
      <pubDate>Fri, 18 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.10pines.com/2009/09/18/mutation-testing/</guid>
      <description>&lt;p&gt;During the 70s, mutation testing emerged as a technique to assess the fault-finding effectiveness of a test suite. It works mutating objects behavior and looking for tests to “kill” those mutants. The surviving mutants are the starting point to write better tests. Thus, this technique is an interesting alternative to code coverage regarding test quality.&lt;/p&gt;

&lt;p&gt;However, so far it is a “brute force” technique that takes too long to provide useful results. This characteristic has forbidden its widespread and practical use regardless new techniques, such as schema-based mutation and selective mutation. Additionally, there are no mutation testing tools (to our knowledge) that work on a meta-circular and dynamic environments, such as Smalltalk, so the compile and link time are the current technique&amp;rsquo;s bottleneck.&lt;/p&gt;

&lt;p&gt;This presentation will introduce the notion of mutation testing, analyzing its advantages and disadvantages with a Smalltalk-based tool. The tool uses the Smalltalk&amp;rsquo;s dynamic and meta-programming facilities to notably reduce the time to get valuable output and help to understand and implement new tests due to its integration with the rest of the environment.&lt;/p&gt;

&lt;p&gt;{% youtube omvClOja4Js %}&lt;/p&gt;

&lt;p&gt;This presentation was presented at &lt;a href=&#34;http://www.esug.org/Conferences/2009&#34;&gt;ESUG 2009&lt;/a&gt;. You can see the handouts here:&lt;/p&gt;

&lt;p&gt;{% slideshare 2049016 %}&lt;/p&gt;

&lt;p&gt;&lt;em&gt;View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/silvajorge&#34;&gt;10Pines&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>